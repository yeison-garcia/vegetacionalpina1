lines(lowess(x,y),lty=2,lwd=2,col=3)
points(x,y, col= datos3$ZoogD, cex=1.4,pch=19)})
str(datos2)
pairs ((datos1[,c(1,2,3,4,6)]),panel=function(x,y)
{abline(lsfit(x,y)$coef,lwd=2,col=3)
lines(lowess(x,y),lty=2,lwd=2,col=3)
points(x,y, col= datos3$ZoogD, cex=1.4,pch=19)})
str(datos2)
pairs ((datos2[,c(1,2,3,4,6)]),panel=function(x,y)
{abline(lsfit(x,y)$coef,lwd=2,col=3)
lines(lowess(x,y),lty=2,lwd=2,col=3)
points(x,y, col= datos3$ZoogD, cex=1.4,pch=19)})
library(lattice)
pairs(datos3[,c(1:4,6)], diag.panel = panel.hist,
upper.panel = panel.cor, lower.panel = panel.smooth)
str(datos2)
pairs ((datos2[,c(1,2,3,4,6)]),panel=function(x,y)
{abline(lsfit(x,y)$coef,lwd=2,col=3)
lines(lowess(x,y),lty=2,lwd=2,col=3)
points(x,y, col= datos3$ZoogD, cex=1.4,pch=19)})
library(lattice)
pairs(datos3[,c(1:4,6)], diag.panel = panel.hist,
upper.panel = panel.cor, lower.panel = panel.smooth)
#| message: false
library(ggplot2)
library(GGally)
ggpairs(datos2, columns = c(2:5),
aes(color=ZoogD, alpha = 0.5))
library(ggplot2)
library(vegan)
installed.packages(c("lubridate", "ggplot2","readr", "forcats", "tedyverse", "openxlsx" ))
library(tidyverse)
library(xtable)       # Importar y exportar
library(openxlsx)     # exportar "*.xlsx"
library(readxl)       # Importar y exportar
library(readxl)
library(lattice)      # No se requiere instalar
library(ggplot2)      # gráfica en ggplot2
library(ggrepel)      # insertar rótulos a los puntos
require(SciViews)     # Fig. dispersión con coef. de pearson
library(plotrix)      # Figuras de cajas con múltiples variables
library(reshape)      # Figuras de cajas con múltiples variables
library(corrplot)     # Figuras de elipses
library(readxl)
# datos2 <- read_excel("datos2.xlsx",
#    sheet = "datos (2)")
# View(datos2)
datos2<- read.csv2("datos1.csv", header = TRUE)
head(datos2)
# colnames(datos2) <- c("ID","Aspect","Slope","Form","PhysD","abudancia","ZoogD")   	# R?tulos de la base de datos  PhysD	ZoogD	Snow	abudancia
datos3<- datos2 %>% select(2:6,8) # no tiene la variable snow
view(datos3)
str(datos2)# estructura de la base "datos"
# datos = read.csv2(file.choose(new = FALSE),row.names=1)
datos2
summary(datos2)
datos2$Form <- as.factor(datos2$Form ) ## hacer facor a pertubacion por marmota
str(datos2)
datos_corr<- datos2 %>% select(2,3,5,7,8)
M <- cor(datos_corr)
round(M,2)
pairs ((datos2[2:5]),panel=function(x,y)
{abline(lsfit(x,y)$coef,lwd=2,col=3)    # lwd = Ancho de la línea
lines(lowess(x,y),lty=1,lwd=3,col=2)    # col= Color de la línea
points(x,y,cex=1)})
library(corrplot)
#| fig-cap: "Matriz de correlación de Pearson con variables ambientales. Los colores en rojo presentan relaciones negativas entre variables, y el color azul relaciones positivas. La intensidad d color corresponden a la fuerza de la relación"
#| label: "fig-corre"
corrplot(M, method = "ellipse", addCoef.col = TRUE)
str(datos2)
pairs ((datos2[,c(1,2,3,4,6)]),panel=function(x,y)
{abline(lsfit(x,y)$coef,lwd=2,col=3)
lines(lowess(x,y),lty=2,lwd=2,col=3)
points(x,y, col= datos3$ZoogD, cex=1.4,pch=19)})
library(lattice)
pairs(datos3[,c(1:4,6)], diag.panel = panel.hist,
upper.panel = panel.cor, lower.panel = panel.smooth)
#| message: false
library(ggplot2)
library(GGally)
ggpairs(datos2, columns = c(2:5),
aes(color=ZoogD, alpha = 0.5))
datos2$ZoogD<-factor(datos2$ZoogD,
levels=c("no","some","high"))
names(datos2)
boxplot( abudancia ~ ZoogD, data=datos2,
xlab="perturbacion",ylab="Abundancia",
col="#99d8c9", cex.lab=1.3)
# Resultado: ColorBrewer: Color Advice for Maps
ggplot(datos2, aes(y=abudancia, x=ZoogD)) +
geom_boxplot(aes(fill = ZoogD)) +
scale_fill_manual(values = c('#fc8d59','#ffffbf',
'#99d594','#3182bd')) +
theme_bw() +
labs(y= "Abundancia", x="perturbacion")
ggplot(melt(datos2[,c(1,1:6)]), aes(x=variable, y=value)) +
geom_boxplot(aes(fill(ZoogD))) +
labs(x="",y="abudancia")
ggplot(melt(datos2[,c(2,4:8)]), aes(x=variable, y=value)) +
geom_boxplot(aes(fill=ZoogD)) +
labs(x="",y="Abundancia") +
facet_wrap(~ variable,scales="free") +
theme_bw()
# Librerías requeridas
library(ggplot2)
library(reshape2)
library(ggrepel)
library(vegan)
library(factoextra) # para hacer PCA
library(ggsci)
library(ggforce)
library(concaveman)
library(corrplot)
# Variables ambientales
amb= log10(datos2[,c(2:5,7)]+1)
round(head(amb),1)
tax.hel= decostand(datos2[,c(9:44)],"hellinger")
glimpse(tax.hel)
round(head(tax.hel[,c(1:36)]),2)
# Matriz de correlaciones con variables transformadas (M1)
M1 <- cor(amb, tax.hel)
corrplot(M1, method = "ellipse", type = "upper")
pca1 <- PCA(amb, graph = FALSE, ncp = 5 )
# Matriz de correlaciones con variables transformadas (M1)
M1 <- cor(amb, tax.hel)
corrplot(M1, method = "ellipse", type = "upper")
# Variables ambientales
amb= log10(datos2[,c(2:5,7)]+1)
round(head(amb),1)
tax.hel= decostand(datos2[,c(9:44)],"hellinger")
glimpse(tax.hel)
round(head(tax.hel[,c(1:36)]),2)
install.packages("factoextra")
str(datos2)
pairs ((datos2[,c(1,2,3,4,6)]),panel=function(x,y)
{abline(lsfit(x,y)$coef,lwd=2,col=3)
lines(lowess(x,y),lty=2,lwd=2,col=3)
points(x,y, col= datos3$ZoogD, cex=1.4,pch=19)})
pairs ((datos2[,c(1,2,3,4,6)]),panel=function(x,y)
{abline(lsfit(x,y)$coef,lwd=2,col=3)
lines(lowess(x,y),lty=2,lwd=2,col=3)
points(x,y, col= datos3$ZoogD, cex=1.4,pch=19)})
library(lattice)
pairs(datos3[,c(1:4,6)], diag.panel = panel.hist,
upper.panel = panel.cor, lower.panel = panel.smooth)
str(datos2)
pairs ((datos2[,c(1,2,3,4,6)]),panel=function(x,y)
{abline(lsfit(x,y)$coef,lwd=2,col=3)
lines(lowess(x,y),lty=2,lwd=2,col=3)
points(x,y, col= datos3$ZoogD, cex=1.4,pch=19)})
library(lattice)
pairs(datos3[,c(1:4,6)], diag.panel = panel.hist,
upper.panel = panel.cor, lower.panel = panel.smooth)
str(datos3)
pairs ((datos2[,c(1,2,3,4,6)]),panel=function(x,y)
{abline(lsfit(x,y)$coef,lwd=2,col=3)
lines(lowess(x,y),lty=2,lwd=2,col=3)
points(x,y, col= datos3$ZoogD, cex=1.4,pch=19)})
library(lattice)
pairs(datos3[,c(1:4,6)], diag.panel = panel.hist,
upper.panel = panel.cor, lower.panel = panel.smooth)
#| message: false
library(ggplot2)
library(GGally)
ggpairs(datos2, columns = c(2:5),
aes(color=ZoogD, alpha = 0.5))
library(lattice)
pairs(datos2[,c(1:4,6)], diag.panel = panel.hist,
upper.panel = panel.cor, lower.panel = panel.smooth)
str(datos)
str(datos2)
pairs ((datos2[,c(1,2,3,4,6)]),panel=function(x,y)
{abline(lsfit(x,y)$coef,lwd=2,col=3)
lines(lowess(x,y),lty=2,lwd=2,col=3)
points(x,y, col= datos3$ZoogD, cex=1.4,pch=19)})
library(lattice)
pairs(datos2[,c(1:4,6)], diag.panel = panel.hist,
upper.panel = panel.cor, lower.panel = panel.smooth)
library(lattice)
pairs(datos2[,c(1:4,6)], diag.panel = panel.hist,
upper.panel = panel.cor, lower.panel = panel.smooth)
library(lattice)
pairs(datos2[,c(2:5,7)], diag.panel = panel.hist,
upper.panel = panel.cor, lower.panel = panel.smooth)
library(lattice)
pairs(datos2[,c(,2:5,7)], diag.panel = panel.hist,
upper.panel = panel.cor, lower.panel = panel.smooth)
library(lattice)
pairs(datos2[,c(2:5,7)], diag.panel = panel.hist,
upper.panel = panel.cor, lower.panel = panel.smooth)
#| message: false
library(ggplot2)
library(GGally)
ggpairs(datos2, columns = c(2:5),
aes(color=ZoogD, alpha = 0.5))
library(lattice)
pairs(datos2[,c(2:5)], diag.panel = panel.hist,
upper.panel = panel.cor, lower.panel = panel.smooth)
datos2$ZoogD<-factor(datos2$ZoogD,
levels=c("no","some","high"))
names(datos2)
boxplot( abudancia ~ ZoogD, data=datos2,
xlab="perturbacion",ylab="Abundancia",
col="#99d8c9", cex.lab=1.3)
# Resultado: ColorBrewer: Color Advice for Maps
ggplot(datos2, aes(y=abudancia, x=ZoogD)) +
geom_boxplot(aes(fill = ZoogD)) +
scale_fill_manual(values = c('#fc8d59','#ffffbf',
'#99d594','#3182bd')) +
theme_bw() +
labs(y= "Abundancia", x="perturbacion")
ggplot(melt(datos2[,c(1,1:6)]), aes(x=variable, y=value)) +
geom_boxplot(aes(fill(ZoogD))) +
labs(x="",y="abudancia")
ggplot(melt(datos2[,c(2,4:8)]), aes(x=variable, y=value)) +
geom_boxplot(aes(fill=ZoogD)) +
labs(x="",y="Abundancia") +
facet_wrap(~ variable,scales="free") +
theme_bw()
ggplot(melt(datos2[,c(1,1:6)]), aes(x=variable, y=value)) +
geom_boxplot(aes(fill(ZoogD))) +
labs(x="",y="abudancia")
library(ggplot2)
library(vegan)
installed.packages(c("lubridate", "ggplot2","readr", "forcats", "tedyverse", "openxlsx" ))
library(tidyverse)
library(xtable)       # Importar y exportar
library(openxlsx)     # exportar "*.xlsx"
library(readxl)       # Importar y exportar
library(readxl)
library(lattice)      # No se requiere instalar
library(ggplot2)      # gráfica en ggplot2
library(ggrepel)      # insertar rótulos a los puntos
require(SciViews)     # Fig. dispersión con coef. de pearson
library(plotrix)      # Figuras de cajas con múltiples variables
library(reshape)      # Figuras de cajas con múltiples variables
library(corrplot)     # Figuras de elipses
library(readxl)
# datos2 <- read_excel("datos2.xlsx",
#    sheet = "datos (2)")
# View(datos2)
datos2<- read.csv2("datos1.csv", header = TRUE)
head(datos2)
# colnames(datos2) <- c("ID","Aspect","Slope","Form","PhysD","abudancia","ZoogD")   	# R?tulos de la base de datos  PhysD	ZoogD	Snow	abudancia
datos3<- datos2 %>% select(2:6,8) # no tiene la variable snow
view(datos3)
str(datos2)# estructura de la base "datos"
# datos = read.csv2(file.choose(new = FALSE),row.names=1)
datos2
summary(datos2)
datos2$Form <- as.factor(datos2$Form ) ## hacer facor a pertubacion por marmota
str(datos2)
datos_corr<- datos2 %>% select(2,3,5,7,8)
M <- cor(datos_corr)
round(M,2)
pairs ((datos2[2:5]),panel=function(x,y)
{abline(lsfit(x,y)$coef,lwd=2,col=3)    # lwd = Ancho de la línea
lines(lowess(x,y),lty=1,lwd=3,col=2)    # col= Color de la línea
points(x,y,cex=1)})
library(corrplot)
#| fig-cap: "Matriz de correlación de Pearson con variables ambientales. Los colores en rojo presentan relaciones negativas entre variables, y el color azul relaciones positivas. La intensidad d color corresponden a la fuerza de la relación"
#| label: "fig-corre"
corrplot(M, method = "ellipse", addCoef.col = TRUE)
str(datos2)
pairs ((datos2[,c(1,2,3,4,6)]),panel=function(x,y)
{abline(lsfit(x,y)$coef,lwd=2,col=3)
lines(lowess(x,y),lty=2,lwd=2,col=3)
points(x,y, col= datos3$ZoogD, cex=1.4,pch=19)})
ggplot(melt(datos2[,c(2,4:8)]), aes(x=variable, y=value)) +
geom_boxplot(aes(fill=ZoogD)) +
labs(x="",y="Abundancia") +
facet_wrap(~ variable,scales="free") +
theme_bw()
# Librerías requeridas
library(ggplot2)
library(reshape2)
library(ggrepel)
library(vegan)
library(factoextra) # para hacer PCA
library(ggsci)
library(ggforce)
library(concaveman)
library(corrplot)
# Variables ambientales
amb= log10(datos2[,c(2:5,7)]+1)
round(head(amb),1)
tax.hel= decostand(datos2[,c(9:44)],"hellinger")
glimpse(tax.hel)
round(head(tax.hel[,c(1:36)]),2)
# Variables ambientales
amb= log10(datos2[,c(2:5,7)])
# Variables ambientales
amb= log10(datos2[,c(2:5,7)+1])
# Variables ambientales
amb= log10(datos2[,c(2:5,7) +1])
# Variables ambientales
amb= log10(datos2[,c(2:5,7)+ 1])
# Variables ambientales
amb= log10(datos2[,c(2:5,7)]+1)
round(head(amb),1)
tax.hel= decostand(datos2[,c(9:44)],"hellinger")
glimpse(tax.hel)
round(head(tax.hel[,c(1:36)]),2)
# Matriz de correlaciones con variables transformadas (M1)
M1 <- cor(amb, tax.hel)
corrplot(M1, method = "ellipse", type = "upper")
pca1 <- PCA(amb, graph = FALSE, ncp = 5 )
pca1 = PCA(amb, graph = FALSE, ncp = 5 )
pca1 = PCA(amb, graph = FALSE, ncp = 5 )
library(patchwork)
c1<- fviz_contrib(pca1,choice="var",axes=1)
# Variables ambientales
amb= log10(datos2[,c(2:5,7)]+1)
round(head(amb),1)
tax.hel= decostand(datos2[,c(9:44)],"hellinger")
glimpse(tax.hel)
round(head(tax.hel[,c(1:36)]),2)
# Variables ambientales
amb= log10(datos2[,c(2:5,7)])
# Variables ambientales
amb= log10(datos2[,c(2:5,7)]
round(head(amb),1)
# Variables ambientales
amb= log10(datos2[,c(2:5,7)])
# Variables ambientales
amb= log10(datos2[,c(2:5,7)] +1)
round(head(amb),1)
tax.hel= decostand(datos2[,c(9:44)],"hellinger")
glimpse(tax.hel)
round(head(tax.hel[,c(1:36)]),2)
# Matriz de correlaciones con variables transformadas (M1)
M1 <- cor(amb, tax.hel)
corrplot(M1, method = "ellipse", type = "upper")
pca1 = PCA(amb, graph = FALSE, ncp = 5 )
library(patchwork)
c1<- fviz_contrib(pca1,choice="var",axes=1)
p3<- fviz_pca_biplot(pca1, geom.ind = "point", col.var = "black", col.ind = datos2$ZoogD, repel = TRUE, addEllipses = TRUE, legend.title= "Perturbación",  palette = c("#ff595e", "#ffd166", "#6a994e")) +
theme_minimal()
# PCA con variables ambientales y especies
library(FactoMineR)
acp2 <- PCA(tax.hel, graph = FALSE, ncp = 36 )# especies
coord<- acp2$var$coord
coord<- coord[,1:2] # las coordemas de la componente 1 y 2
coord<- data.frame(coord) # lo transforme a base datos
colnames(coord)<- c("PC1", "PC2")
coord
coord<- transform(coord, PC1=PC1*0.2, PC2=PC2*0.2)
fviz_add(p3, coord, color ="blue",
geom= c("text"), repel = TRUE, labelsize = 3, pointsize = 1)+ ggtitle("")
pca1 = PCA(amb, graph = FALSE, ncp = 5 )
str(datos2)
pairs ((datos3[,c(1,2,3,4,6)]),panel=function(x,y)
{abline(lsfit(x,y)$coef,lwd=2,col=3)
lines(lowess(x,y),lty=2,lwd=2,col=3)
points(x,y, col= datos3$ZoogD, cex=1.4,pch=19)})
str(datos3)
pairs ((datos3[,c(1,2,3,4,6)]),panel=function(x,y)
{abline(lsfit(x,y)$coef,lwd=2,col=3)
lines(lowess(x,y),lty=2,lwd=2,col=3)
points(x,y, col= datos3$ZoogD, cex=1.4,pch=19)})
library(lattice)
pairs(datos2[,c(2:5,7)], diag.panel = panel.hist,
upper.panel = panel.cor, lower.panel = panel.smooth)
#| message: false
library(ggplot2)
library(GGally)
ggpairs(datos2, columns = c(2:5),
aes(color=ZoogD, alpha = 0.5))
datos2$ZoogD<-factor(datos2$ZoogD,
levels=c("no","some","high"))
names(datos2)
boxplot( abudancia ~ ZoogD, data=datos2,
xlab="perturbacion",ylab="Abundancia",
col="#99d8c9", cex.lab=1.3)
# Resultado: ColorBrewer: Color Advice for Maps
ggplot(datos2, aes(y=abudancia, x=ZoogD)) +
geom_boxplot(aes(fill = ZoogD)) +
scale_fill_manual(values = c('#fc8d59','#ffffbf',
'#99d594','#3182bd')) +
theme_bw() +
labs(y= "Abundancia", x="perturbacion")
ggplot(melt(datos2[,c(1,1:6)]), aes(x=variable, y=value)) +
geom_boxplot(aes(fill(ZoogD))) +
labs(x="",y="abudancia")
ggplot(melt(datos2[,c(2,4:8)]), aes(x=variable, y=value)) +
geom_boxplot(aes(fill=ZoogD)) +
labs(x="",y="Abundancia") +
facet_wrap(~ variable,scales="free") +
theme_bw()
# Librerías requeridas
library(ggplot2)
library(reshape2)
library(ggrepel)
library(vegan)
library(factoextra) # para hacer PCA
library(ggsci)
library(ggforce)
library(concaveman)
library(corrplot)
# Variables ambientales
amb= log10(datos2[,c(2:5,7)] +1)
round(head(amb),1)
tax.hel= decostand(datos2[,c(9:44)],"hellinger")
glimpse(tax.hel)
round(head(tax.hel[,c(1:36)]),2)
detach("package:FactoMineR", unload = TRUE)
library(FactoMineR)
# Variables ambientales
amb= log10(datos2[,c(2:5,7)] +1)
round(head(amb),1)
tax.hel= decostand(datos2[,c(9:44)],"hellinger")
glimpse(tax.hel)
round(head(tax.hel[,c(1:36)]),2)
# Matriz de correlaciones con variables transformadas (M1)
M1 <- cor(amb, tax.hel)
corrplot(M1, method = "ellipse", type = "upper")
pca1 = PCA(amb, graph = FALSE, ncp = 5 )
library(readxl)
# datos2 <- read_excel("datos2.xlsx",
#    sheet = "datos (2)")
# View(datos2)
datos2<- read.csv2("datos1.csv", header = TRUE)
head(datos2)
# colnames(datos2) <- c("ID","Aspect","Slope","Form","PhysD","abudancia","ZoogD")   	# R?tulos de la base de datos  PhysD	ZoogD	Snow	abudancia
datos3<- datos2 %>% select(2:6,8) # no tiene la variable snow
view(datos3)
##datos2$Form <- as.factor(datos2$Form ) ## hacer facor a pertubacion por marmota
str(datos2)
datos_corr<- datos2 %>% select(2,3,5,7,8)
M <- cor(datos_corr)
round(M,2)
pairs ((datos2[2:5]),panel=function(x,y)
{abline(lsfit(x,y)$coef,lwd=2,col=3)    # lwd = Ancho de la línea
lines(lowess(x,y),lty=1,lwd=3,col=2)    # col= Color de la línea
points(x,y,cex=1)})
library(corrplot)
#| fig-cap: "Matriz de correlación de Pearson con variables ambientales. Los colores en rojo presentan relaciones negativas entre variables, y el color azul relaciones positivas. La intensidad d color corresponden a la fuerza de la relación"
#| label: "fig-corre"
corrplot(M, method = "ellipse", addCoef.col = TRUE)
str(datos3)
pairs ((datos3[,c(1,2,3,4,6)]),panel=function(x,y)
{abline(lsfit(x,y)$coef,lwd=2,col=3)
lines(lowess(x,y),lty=2,lwd=2,col=3)
points(x,y, col= datos3$ZoogD, cex=1.4,pch=19)})
library(lattice)
pairs(datos2[,c(2:5,7)], diag.panel = panel.hist,
upper.panel = panel.cor, lower.panel = panel.smooth)
#| message: false
library(ggplot2)
library(GGally)
ggpairs(datos2, columns = c(2:5),
aes(color=ZoogD, alpha = 0.5))
datos2$ZoogD<-factor(datos2$ZoogD,
levels=c("no","some","high"))
names(datos2)
boxplot( abudancia ~ ZoogD, data=datos2,
xlab="perturbacion",ylab="Abundancia",
col="#99d8c9", cex.lab=1.3)
ggplot(melt(datos2[,c(1,1:6)]), aes(x=variable, y=value)) +
geom_boxplot(aes(fill(ZoogD))) +
labs(x="",y="abudancia")
ggplot(melt(datos2[,c(2:5,7)]), aes(x=variable, y=value)) +
geom_boxplot(aes(fill(ZoogD))) +
labs(x="",y="abudancia")
ggplot(melt(datos2[,c(2:6,7)]), aes(x=variable, y=value)) +
geom_boxplot(aes(fill = ZoogD)) +
labs(x="",y="abudancia")
ggplot(melt(datos2[,c(2,4:8)]), aes(x=variable, y=value)) +
geom_boxplot(aes(fill=ZoogD)) +
labs(x="",y="Abundancia") +
facet_wrap(~ variable,scales="free") +
theme_bw()
# Librerías requeridas
library(ggplot2)
library(reshape2)
library(ggrepel)
library(vegan)
library(factoextra) # para hacer PCA
library(ggsci)
library(ggforce)
library(concaveman)
library(corrplot)
# Variables ambientales
amb= log10(datos2[,c(2:5,7)] +1)
round(head(amb),1)
tax.hel= decostand(datos2[,c(9:44)],"hellinger")
glimpse(tax.hel)
round(head(tax.hel[,c(1:36)]),2)
# Matriz de correlaciones con variables transformadas (M1)
M1 <- cor(amb, tax.hel)
corrplot(M1, method = "ellipse", type = "upper")
pca1 = PCA(amb, graph = FALSE, ncp = 5 )
# para escalar las variables ambientales y se utiliza la matriz de covarianza.
summary(pca1)
library(patchwork)
c1<- fviz_contrib(pca1,choice="var",axes=1)
# contribucion de componente 1
c2<- fviz_contrib(pca1,choice="var",axes=2) # para componente 2
c1/c2
p3<- fviz_pca_biplot(pca1, geom.ind = "point", col.var = "black", col.ind = datos2$ZoogD, repel = TRUE, addEllipses = TRUE, legend.title= "Perturbación",  palette = c("#ff595e", "#ffd166", "#6a994e")) +
theme_minimal()
# PCA con variables ambientales y especies
library(FactoMineR)
acp2 <- PCA(tax.hel, graph = FALSE, ncp = 36 )# especies
coord<- acp2$var$coord
coord<- coord[,1:2] # las coordemas de la componente 1 y 2
coord<- data.frame(coord) # lo transforme a base datos
colnames(coord)<- c("PC1", "PC2")
coord
coord<- transform(coord, PC1=PC1*0.2, PC2=PC2*0.2)
fviz_add(p3, coord, color ="blue",
geom= c("text"), repel = TRUE, labelsize = 3, pointsize = 1)+ ggtitle("")
